[package]
name = "pipa_rs"                                                                        # 最终的可执行文件名将是 pipa-rs
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "A Native Performance Analytics Toolchain for Linux, built in Rust (CLI)"

[dependencies]
# 让我们的 CLI 可以调用 collector 中的函数
pipa_collector = { path = "../pipa_collector" }
# 强大的命令行参数解析库
clap = { workspace = true }
# 优雅的应用程序级错误处理
anyhow = { workspace = true }
crossterm = { workspace = true }
# Provides raw FFI bindings to core C libraries, needed for calling `ioctl(fd, ...)`.
libc = { workspace = true }
bytemuck = { workspace = true }
perf-event-open-sys = { workspace = true }


[dev-dependencies]
assert_cmd = { workspace = true }
predicates = { workspace = true }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
