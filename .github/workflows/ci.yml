name: CI

# Triggers the workflow on push or pull request events but only for the main branch
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install the Rust toolchain with rustfmt and clippy
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

      # 3. Cache Cargo dependencies to speed up subsequent builds
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # 4. Check formatting
      - name: Check formatting
        run: cargo fmt --all -- --check

      # 5. Run Clippy linter. -D warnings treats all warnings as errors.
      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

      # 6. Build the project in debug mode
      - name: Build project
        run: cargo build --all-targets --verbose

      # 7. Run tests
      - name: Run tests
        run: cargo test --all-targets --verbose
